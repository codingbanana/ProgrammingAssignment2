class(mix_list)
class(rec_list)
flat_vector <- unlist(rec_list)
str(flat_vector)
logic_vector <- c(TRUE, 1L)
class(logic_vector)
as_vector <- as.vector(mix_list)
as_vector
rec_list
a1 <- 1:10
a2 <- c(1:10)
attr(a1,"att1") <- 1
attr(a1,"att1") <- "attribute1"
attributes(a1)
attributes(a1) <- c(1:10)
attributes(a1) <- list(1:10)
attributes(a1) <- list("a","b")
str(a1)
str(rec_list)
x <- 4L
class(x)
average(ex1["Ozone"])
stats("Ozone")
stat("Ozone")
stat(ex1)
strc(ex1)
stru(ex1)
x<- factor(ex1)
x <- 1:3
y <- 2:3
x+y
x <- factor(1:3)
x <- factor(1:3, levels("a","b","c"))
x <- factor(1:3, levels(c("a","b","c")))
table(x)
unclass(x)
mix_factor <- factor(mix_vector)
table(mix_factor)
ex1_Factor <- factor(ex1)
unclass(mix_factor)
mix_factor
levels(mix_factor)
structure(1:5,comment="myA")
structure?
1
?structure
structure(1:5,attr="myA")
help("structure")
levels(mix_factor) <- rev(levels(mix_factor))
levels(mix_factor)
f2 <- rev(levels(mix_factor))
f2
stats(f2)
str(f2)
arr1 <- array(1:12,c(2,4,2))
arr1
dim(arr1)
dim(arr1) <- c(2,3,3)
dim(arr1) <- c(2,1,8)
arr1
dim(arr1) <- c(2,8)
arr1
typeof(arr1)
class(arr1)
dim(flat_vector)
dim(arr1)
length(f2)
f2[1] <- 1:3
typeof(f2)
typeof(mix_list)
mix_list[1] <- 1:10
mix_list[[1]] <- 1:10
mix_list[[1]][3]
mix_list[3]
mix_list[[3]]
class(ex1)
ex1_matrix <- as.matrix(ex1)
ex1_matrix
ex1_vector <- as.vector(ex1)
class(ex1_vector)
class(ex1_matrix)
ex1_matrix <- data.matrix(ex1)
colname(ex1)
col.name(ex1)
attr(ex1)
attributes(ex1)
attr(ex1,$class)
attr(ex1,class)
attr(ex1,"class:)
""
e
=
2
df1 <- data.frame(x,y,z)
df1 <- data.frame(x="",y="",z="")
df1 <- data.frame(x=NA,y=NA,z=NA)
df1 <- data.frame(x=NA,y=NA,z=NA)
attr(ex1,"class")
attributes(ex1)
class(arr1)
class(a1)
class(int_vector)
class(rec_list)
dim(mix_list)
dim(df1)
dim(ex1)
dput(ex1)
x <-1:3
y<-2:3
x+y
x <- 1:10
if(x>5){
x <- 0
}
f <- function(x){
g <- function(y){
y+z
}
z<-4
x+g(x)
}
z <- 10
f(3)
a <- read.csv(file = paste(c(directory,"/",id,".csv"),collapse=''))
a <- read.csv(file = paste(c("./Cousera/specdata","/","001",".csv"),collapse=''))
View(a)
source('~/Documents/R_Work_Directory/pollutantmean.R')
mean(a["nitrate"],na.rm = TRUE)
a["nitrate"]
mean(a["nitrate"],na.rm = TRUE)
mean(a[["nitrate"]],na.rm = TRUE)
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
mean(a[["nitrate"]],na.rm = TRUE)
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
for(i in 1:length(id)){
a <- read.csv(file = paste(c(directory,"/",id_char[i],".csv"),collapse='')
long_vector <- c(long_vector,a[[pollutant]])
}
}
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
source('~/Documents/R_Work_Directory/pollutantmean.R')
pollutantmean("/coursera/specdata", "sulfate", 1:10)
pollutantmean("./coursera/specdata", "sulfate", 1:10)
pollutantmean("./Cousera/specdata", "sulfate", 1:10)
source('~/Documents/R_Work_Directory/pollutantmean.R')
pollutantmean("./Cousera/specdata", "sulfate", 1:10)
source('~/Documents/R_Work_Directory/pollutantmean.R')
pollutantmean("./Cousera/specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/R_Work_Directory/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/R_Work_Directory/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
id[1]
View(a)
length(23)
source('~/Documents/R_Work_Directory/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23:24)
pollutantmean("specdata", "nitrate", 1)
id <- 23:24
id_char <- sprintf("03%d",id)
id_char
id_char <- sprintf("%03d",id)
id_char
source('~/Documents/R_Work_Directory/pollutantmean.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
View(a)
View(a)
data_df <- data.frame(id=interger(),nobs=integer())
data_df <- data.frame(id=integer(),nobs=integer())
View(data_df)
source('~/Documents/R_Work_Directory/complete.R')
complete("specdata", 1)
source('~/Documents/R_Work_Directory/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Documents/R_Work_Directory/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
cor_num <- cor(x = a[["nitrate"]],y = a[["sulfate"]])
cor_num <- cor(x = a[2],y = a[3])
cor_num
cor_num <- cor(x = a[[2],y = a[[3])
cor_num <- cor(x = a[[2]],y = a[[3]])
cor_num
cor_num <- cor(x = a[2],y = a[3],complete.obs)
cor_num <- cor(x = a[2],y = a[3],use = "complete.obs")
cor_num
cor_num <- cor(x = a[[2]],y = a[[3]],use = "complete.obs")
cor_num
class(cor_num)
typeof(cor_num)
source('~/Documents/R_Work_Directory/corr.R')
cr <- corr("specdata", 150)
head(cr)
cr
source('~/Documents/R_Work_Directory/corr.R')
source('~/Documents/R_Work_Directory/corr.R')
source('~/Documents/R_Work_Directory/corr.R')
source('~/Documents/R_Work_Directory/corr.R')
nobs <- 0
source('~/Documents/R_Work_Directory/corr.R')
cr <- corr("specdata", 150)
head(cr
)
summary(cr)
submit()
submit()
submit()
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
cube <- make.power(2)
aa <- environment(cube)
typeof(aa)
class(aa)
aa
?ls
ls()
?get
x <- matrix(rnorm(200),20)
x
x
quantile(x = x[1,],probs = c(0.25,0.75))
typeof(quantile(x = x[1,],probs = c(0.25,0.75)))
class(quantile(x = x[1,],probs = c(0.25,0.75)))
x <- array(rnorm(600),c(20,10,3))
x
x$1
x[1]
x[1:3]
x[1,,]
apply(x,c(1,,3),quantile)
apply(x,MARGIN = c(1,,3),quantile)
apply(x,MARGIN = c(1,3),quantile)
res_App <- apply(x,MARGIN = c(1,3),quantile)
rnum(res_app)
numr(res_app)
dim(res_app)
dimension(res_app)
row(res_app)
row(x)
typeof(res_App)
class(res_App)
row(res_App)
dim(res_App)
res_App <- apply(x,MARGIN = 1,quantile)
dim(res_App)
res_App
res_App <- apply(x,MARGIN = c(1,2,3),quantile)
res_App
rowMeans(x = x,dims=3)
rowMeans(x,dims=3)
rowMeans(x)
rowMeans(x,dims=1)
rowMeans(x,dims=2)
rowMeans(x,dims=3)
rowMeans(x,dims=0)
rowMeans(x,dims=1)
?gl
f <- gl(3,10)
class(f)
typeof(f)
levels(f)
data(iris)
tapply(iris$Sepal.Length,"species",mean)
tapply(X = iris$Sepal.Length, INDEX = iris[[species]],FUN = mean)
View(iris)
tapply(X = iris$Sepal.Length, INDEX = iris$species,FUN = mean)
f <- factor(iris$Species)
f
unclass(f)
class(f)
f <- factor(iris$Species)
tapply(X = iris$Sepal.Length, INDEX = iris$Species,FUN = mean)
iris[,1:4]
data(mtcars)
sapply(split(mtcars$hp,mtcars$cyl),mean)
mtcars[cyl=4]
mtcars[mtcars$cyl=4]
mtcars[mtcars$cyl==4]
mtcars[mtcars$hp==82.63636]
mtcars[mtcars[,cyl]==8]
mtcars[mtcars[,"cyl"]==8]
mtcars[mtcars[,"cyl"]==8,]
mtcars[mtcars$cyl==8,]
subset(mtcars, "cyl"==8)
subset(mtcars, cyl==8)
?seed
?seeds
??seed
?traceback
?recover
?trace
?dnorm
str(dnorm)
example(dnorm)
?set.seed
?rpois
?set.seed
str(sample)
?rbin
?rbino
?rbinom
?rexp
?rgam
?rgamma
set.seed(1)
rpois(5,2)
set.seed(2)
rpois(5,2)
library(datasets)
Rprof()
fit <- lm(y~x1+x2)
x1 <- rnorm(100)
x3 <- rnorm(100)
y <- rpois(100,5,2)
y <- rpois(n = 100,lambda = 5)
fit <- lm(y~x1+x2)
fit <- lm(y~x1+x3)
Rprof(NULL)
summaryRprof()
class(summaryRprof()$by.total)
class(summaryRprof())
load("~/Git/ProgrammingAssignment2/.RData")
??ls
?ls
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(x)
cachemean(a1)
makeVector(a1)
cachemean(a1)
environment()
a1 <- makeVector(a1)
cachemean(a1)
setwd("~/Git/ProgrammingAssignment2")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1:100)
vc <- makeVector(1:50)
vc$getmean
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(vc)
x$getmean()
x$getmean
vc$getmean()
message("getting cached data")
source('~/Git/ProgrammingAssignment2/cachematrix.R')
mx <- matrix(1:100,nrow=20,ncol=5)
mx
cache <- makeCacheMatrix(mx)
chche
cache
cacheSolve(cache)
mx <- matrix(1:25, 5,5)
mx
cache <- makeCacheMatrix(mx)
cacheSolve(cache)
cacheSolve(cache)
n
rm(ls())
rm(list=ls())
mx <- matrix(1:25, 5,5)
mx_inv <- solve(mx)
?solve
mx_inv <- solve(mx,1)
unity <- matrix(1, 5, 5)
unity
mx_inv <- solve(mx,unity)
unity2 <- matrix(1,5,1)
mx_inv <- solve(mx,unity2)
unity2 <- matrix(1,1,5)
mx_inv <- solve(mx,unity2)
mxa <- matrix(1:4,2,2)
mxb <- matrix(c(1,0),c(0,1))
mxb <- matrix(c(1,0,0,1),2,2)
mxb
solve(mxa,mxb)
solve(mxa)
mxa <- matrix(1:9,3,3)
solve(mxa)
aa <- runif(30,-1,1)
aa
aa <- runif(25,-1,1)
mxa <- matrix(aa,5,5)
mxa
solve(mxa)
cache <- makeCacheMatrix(mxa)
source('~/Git/ProgrammingAssignment2/cachematrix.R')
cache <- makeCacheMatrix(mxa)
cacheSolve(cache)
mxa*cacheSolve(cache)
mxa%*%cacheSolve(cache)
source('~/Git/ProgrammingAssignment2/cachematrix.R')
setsolve <- function(solve) m <<- solve
setsolve(mean)
obj <- setsolve(mean)
str(obj)
obj(1:5)
source('~/Git/ProgrammingAssignment2/cachematrix.R')
recover()
debug(makeCacheMatrix)
cache <- makeCacheMatrix(mxa)
recover()
traceback()
trace()
q
?
??
?
j
0
0
f <- function(x) {    r <- x - g(x)    r }g <- function(y) {    r <- y * h(y)    r }h <- function(z) {    r <- log(z)    if (r < 10) r^2    else r^3 }
f <- function(x) {
r <- x - g(x)
r }
g <- function(y) {
r <- y * h(y)
r }
h <- function(z) {
r <- log(z)
if (r < 10) r^2
else r^3 }
f(5)
f(-1)
traceback()
3
2
123
debug(f)
f(-1)
SS <- function(mu, x) {    d <- x - mu    d2 <- d^2    ss <- sum(d2)    ss}
SS <- function(mu, x) {    d <- x - mu    d2 <- d^2    ss <- sum(d2)    ss}
SS <- function(mu, x) {    d <- x - mu    d2 <- d^2    ss <- sum(d2)    ss}
debug(f)
f)(-1)
f(-1)
f(-1)
f(1)
